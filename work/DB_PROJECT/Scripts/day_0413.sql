CREATE TABLE CUSTOMER(
	ID VARCHAR2(300) PRIMARY KEY,
	NAME VARCHAR2(300),
	ADDR VARCHAR2(1000)
);

CREATE TABLE ANIMAL(
	NUM CHAR(4),
	COLOR VARCHAR2(100),
	"TYPE" VARCHAR2(100),
	AGE NUMBER(2),
	NAME VARCHAR2(300),
	ID VARCHAR2(100),
	CONSTRAINT ANIMAL_CUSTOMER_FK FOREIGN KEY(ID) REFERENCES CUSTOMER(ID)
);

DROP TABLE CUSTOMER;
DROP TABLE ANIMAL;
--DML
--INSERT
INSERT INTO CUSTOMER
VALUES('id2357', '정다솔', '서울시 강남구 역삼동');

INSERT INTO CUSTOMER (ID, NAME) --부분만 추가하고싶으면 이렇게 추가하고싶은 부분을 적어주면 됨
VALUES('apple', '조성완');

INSERT INTO CUSTOMER
VALUES('banana', '김채린', '서울시 성동구 성수동');

INSERT INTO CUSTOMER
VALUES('cherry', '전세미', '경기도 하남시 망월동');

INSERT INTO CUSTOMER
VALUES('durian', '방건', '서울시 관악구 신림동');

INSERT INTO ANIMAL
VALUES('C001', '치즈색', '고양이', 3, '나비', 'id2357');

INSERT INTO ANIMAL
VALUES('D001', '하얀색', '강아지', 5, '뽀삐', 'id2357');

INSERT INTO ANIMAL
VALUES('C002', '회색', '고양이', 3, '시월이', 'apple');

INSERT INTO ANIMAL
VALUES('D002', '검정색', '강아지', 7, '코비', 'banana');

INSERT INTO ANIMAL
VALUES('C003', '회색', '고양이', 1, '만수', 'cherry');

INSERT INTO ANIMAL
VALUES('E001', '초록색', '악어', 10, '레넥톤', 'durian');

--검색
SELECT * FROM ANIMAL; --ANIMAL 테이블에서 *(모든 것)을 검색

DELETE FROM ANIMAL
WHERE ID='id2357'; --삭제할 땐 자식 먼저 삭제해야 함. 이 줄 없이 CUSTOMER에서 삭제하려 들면 오류남

DELETE FROM CUSTOMER
WHERE ID='id2357';

--UPDATE
UPDATE CUSTOMER
SET ADDR='서울시 마포구 합정동'
WHERE ID='apple';

SELECT * FROM CUSTOMER;

--SELECT
SELECT * FROM ANIMAL;

SELECT * FROM ANIMAL
WHERE "TYPE" = '고양이'; --TYPE이 고양이인 모든 데이터 검색

SELECT NUM, NAME FROM ANIMAL
WHERE "TYPE" = '고양이'; --TYPE이 고양이인 NUM, NAME 데이터 검색
--------------------------------------------------------------
SELECT * FROM PLAYER;
SELECT * FROM TEAM;
SELECT * FROM SCHEDULE;
SELECT * FROM STADIUM;

SELECT * FROM DEPARTMENTS;
SELECT * FROM EMPLOYEES;
SELECT * FROM LOCATIONS;
SELECT * FROM SALGRADE;
SELECT * FROM EMP;
SELECT * FROM JOBS;

--PLAYER 테이블에서 TEAM_ID가 K01 인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID='K01';

--TEAM_ID가 K01이 아닌 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID!='K01';

--WEIGHT가 70이상, 80이하인 선수 검색
SELECT * FROM PLAYER WHERE WEIGHT>=70 AND WEIGHT<=80;
--BETWEEN A AND B : A 이상 B 이하(위와 같음)
SELECT * FROM PLAYER WHERE WEIGHT BETWEEN 70 AND 80;

--BETWEEN이 길어질 땐 묶어주는 게 좋음
SELECT * FROM PLAYER WHERE (WEIGHT BETWEEN 70 AND 80) AND WEIGHT != 75;

--TEAM_ID가 K03이고 HEIGHT가 180 미만인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID='K03' AND HEIGHT<180;

--TEAM_ID : K06, NICKNAME : 제리
SELECT * FROM PLAYER WHERE TEAM_ID = 'K06' AND NICKNAME = '제리';

--HEIGHT >= 170, WEIGHT >= 80 인 선수 이름 검색
SELECT PLAYER_NAME FROM PLAYER WHERE HEIGHT >= 170 AND WEIGHT >= 80;

--STADIUM 테이블에서 좌석 수가 30000 초과 41000이하인 경기장 검색
SELECT * FROM STADIUM WHERE SEAT_COUNT > 30000 AND SEAT_COUNT <= 41000;

--PLAYER테이블에서 TEAM_ID가 K02이거나 K07이고 포지션은 MF인 선수 검색
SELECT * FROM PLAYER WHERE (TEAM_ID = 'K02' OR TEAM_ID = 'K07') AND "POSITION" = 'MF'; --AND가 OR보다 우선순위가 높음. 따라서 괄호로 묶어줘야 함.

SELECT * FROM ANIMAL;

INSERT INTO CUSTOMER
VALUES('eggplant', '한민정', '경상남도 진해시');

SELECT * FROM CUSTOMER;

--PLAYER TABLE에서 TEAM_ID가 K01인 선수 이름을 내 이름으로 바꾸기
SELECT PLAYER_NAME FROM PLAYER WHERE TEAM_ID = 'K01';
UPDATE PLAYER
SET PLAYER_NAME = '정모현'
WHERE TEAM_ID = 'K01';


--PLAYER TABLE에서 POSITION이 MF인 선수 삭제
DELETE FROM PLAYER
WHERE "POSITION" = 'MF';
SELECT * FROM PLAYER WHERE "POSITION" = 'MF';

--PLAYER TABLE에서 HEIGHT 180이상인 선수 삭제
DELETE FROM PLAYER
WHERE HEIGHT >= 180;
SELECT * FROM PLAYER WHERE HEIGHT >= 180;

--PLAYER TABLE에서 NICKNAME이 비어있는 선수의 NICKNAME을 본인의 별명으로 바꾸기
UPDATE PLAYER
SET NICKNAME = '정미정'
WHERE NICKNAME IS NULL;
SELECT * FROM PLAYER;















